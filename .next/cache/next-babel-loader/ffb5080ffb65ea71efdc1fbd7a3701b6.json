{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\naxios.defaults.withCredentials = true;\nexport var getServerSideToken = function getServerSideToken(req) {\n  var _req$signedCookies = req.signedCookies,\n      signedCookies = _req$signedCookies === void 0 ? {} : _req$signedCookies;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport var getClientSideToken = function getClientSideToken() {\n  if (true) {\n    var user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user: user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nvar WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\nexport var getUserScript = function getUserScript(user) {\n  return \"\".concat(WINDOW_USER_SCRIPT_VARIABLE, \" = \").concat(JSON.stringify(user), \";\");\n};\nexport var authInitialProps = function authInitialProps(isProtectedRoute) {\n  return function (_ref) {\n    var req = _ref.req,\n        res = _ref.res;\n    var auth = req ? getServerSideToken(req) : getClientSideToken();\n    var currentPath = req ? req.url : window.location.pathname;\n    var user = auth.user;\n    var isAnonymous = !user || user.type !== \"authenticated\";\n\n    if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n      return redirectUser(res, \"/login\");\n    }\n\n    return {\n      auth: auth\n    };\n  };\n};\n\nvar redirectUser = function redirectUser(res, path) {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport var loginUser = function loginUser(email, password) {\n  var _await$axios$post, data;\n\n  return _regeneratorRuntime.async(function loginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/login\", {\n            email: email,\n            password: password\n          }));\n\n        case 2:\n          _await$axios$post = _context.sent;\n          data = _await$axios$post.data;\n\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n          }\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var logoutUser = function logoutUser() {\n  return _regeneratorRuntime.async(function logoutUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/logout\"));\n\n        case 3:\n          Router.push(\"/login\");\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserProfile = function getUserProfile() {\n  var _await$axios$get, data;\n\n  return _regeneratorRuntime.async(function getUserProfile$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"/api/profile\"));\n\n        case 2:\n          _await$axios$get = _context3.sent;\n          data = _await$axios$get.data;\n          return _context3.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Next/userAuthentication/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","getServerSideToken","req","signedCookies","token","user","getClientSideToken","window","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","JSON","stringify","authInitialProps","isProtectedRoute","res","auth","currentPath","url","location","pathname","isAnonymous","type","redirectUser","path","redirect","finished","replace","loginUser","email","password","post","data","logoutUser","push","getUserProfile","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\naxios.defaults.withCredentials = true;\n\nexport const getServerSideToken = req => {\n  const { signedCookies = {} } = req;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n  return { user: signedCookies.token };\n};\n\nexport const getClientSideToken = () => {\n  if (typeof window !== \"undefined\") {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return { user };\n  }\n  return { user: {} };\n};\n\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\n\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\n\nexport const authInitialProps = isProtectedRoute => ({ req, res }) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return redirectUser(res, \"/login\");\n  }\n\n  return { auth };\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n  Router.replace(path);\n  return {};\n};\n\nexport const loginUser = async (email, password) => {\n  const { data } = await axios.post(\"/api/login\", { email, password });\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n};\n\nexport const logoutUser = async () => {\n  if (typeof window !== \"undefined\") {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n  await axios.post(\"/api/logout\");\n  Router.push(\"/login\");\n};\n\nexport const getUserProfile = async () => {\n  const { data } = await axios.get(\"/api/profile\");\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}